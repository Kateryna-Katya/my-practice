{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["\n\n\n// function makeTransaction (quantity, pricePerDroid ){\n//     const totalPrice = pricePerDroid * quantity;{\n//     return `You ordered ${quantity} droids worth ${totalPrice} credits!`};\n    \n//     }\n// console.log(makeTransaction(5, 3000)); // \"You ordered 5 droids worth 15000 credits!\"\n// console.log(makeTransaction(3, 1000)); // \"You ordered 3 droids worth 3000 credits!\"\n// console.log(makeTransaction(10, 500)); // \"You ordered 10 droids worth 5000 credits!\"\n\n\n// function getShippingMessage(country, price, deliveryFee){\n//    const totalPrice = price + deliveryFee;{\n//     return `Shipping to ${country} will cost ${totalPrice} credits`\n//    } ;\n// }\n// console.log(getShippingMessage(\"Australia\", 120, 50)); // \"Shipping to Australia will cost 170 credits\"\n// console.log(getShippingMessage(\"Germany\", 80, 20)); // \"Shipping to Germany will cost 100 credits\"\n// console.log(getShippingMessage(\"Sweden\", 100, 20)); // \"Shipping to Sweden will cost 120 credits\"\n\n// function makeTransaction(quantity, pricePerDroid, customerCredits){\n//     const totalPrice = quantity * pricePerDroid;\n//     if(totalPrice>customerCredits){\n//         return \"Insufficient funds!\"\n//     } else {\n//         return `You ordered ${quantity} droids worth ${totalPrice} credits!`\n//     };\n// }\n\n// console.log(makeTransaction(5, 3000, 23000)); // \"You ordered 5 droids worth 15000 credits!\"\n// console.log(makeTransaction(3, 1000, 15000)); // \"You ordered 3 droids worth 3000 credits!\"\n// console.log(makeTransaction(10, 5000, 8000)); // \"Insufficient funds!\"\n// console.log(makeTransaction(8, 2000, 10000)); // \"Insufficient funds!\"\n// console.log(makeTransaction(10, 500, 5000)); // \"You ordered 10 droids worth 5000 credits!\"\n\n\n\n\n// function formatMessage(message, maxLength){\n//     const messegeLength= message.length;\n//     if(messegeLength<=maxLength){\n//         return message\n//     }\n//     else {\n//         return message.slice(0,maxLength)+'...'\n\n//     }\n// }\n// console.log(formatMessage(\"Curabitur ligula sapien\", 16)); // \"Curabitur ligula...\"\n// console.log(formatMessage(\"Curabitur ligula sapien\", 23)); // \"Curabitur ligula sapien\"\n// console.log(formatMessage(\"Vestibulum facilisis purus nec\", 20)); // \"Vestibulum facilisis...\"\n// console.log(formatMessage(\"Vestibulum facilisis purus nec\", 30)); // \"Vestibulum facilisis purus nec\"\n// console.log(formatMessage(\"Nunc sed turpis a felis in nunc fringilla\", 15)); // \"Nunc sed turpis...\"\n// console.log(formatMessage(\"Nunc sed turpis a felis in nunc fringilla\", 41)); // \"Nunc sed turpis a felis in nunc fringilla\"\n\n\n\n// function checkForSpam(message){\n//     const newMessage = message.toLowerCase();\n//     if(newMessage.includes('spam')||newMessage.includes('sale')){\n//         return true\n//     }\n//     else {\n//         return false}\n// }\n\n\n// console.log(checkForSpam(\"Latest technology news\")); // false\n// console.log(checkForSpam(\"JavaScript weekly newsletter\")); // false\n// console.log(checkForSpam(\"Get best sale offers now!\")); // true\n// console.log(checkForSpam(\"Amazing SalE, only tonight!\")); // true\n// console.log(checkForSpam(\"Trust me, this is not a spam message\")); // true\n// console.log(checkForSpam(\"Get rid of sPaM emails. Our book in on sale!\")); // true\n// console.log(checkForSpam(\"[SPAM] How to earn fast money?\")); // true\n\n\n// function getShippingCost(country){\n//     let price;\n//     switch (country) {\n//         case \"China\":\n//         price = 100;\n//         break;\n//         case \"Chile\":\n//             price = 250;\n//             break;\n//             case \"Australia\":\n//                 price = 170;\n//                 break;\n//                 case \"Jamaica\":\n//         price = 120;\n//         break;\n\n//             default: return \"Sorry, there is no delivery to your country\"\n//     }\n//     return `Shipping to ${country} will cost ${price} credits`\n// }\n\n\n// console.log(getShippingCost(\"Australia\")); // \"Shipping to Australia will cost 170 credits\"\n// console.log(getShippingCost(\"Germany\")); // \"Sorry, there is no delivery to your country\"\n// console.log(getShippingCost(\"China\")); // \"Shipping to China will cost 100 credits\"\n// console.log(getShippingCost(\"Chile\")); // \"Shipping to Chile will cost 250 credits\"\n// console.log(getShippingCost(\"Jamaica\")); // \"Shipping to Jamaica will cost 120 credits\"\n// console.log(getShippingCost(\"Sweden\")); // \"Sorry, there is no delivery to your country\"\n\n\n// function slugify(title){\n//     const newTitle=title.toLowerCase();\n//     const slug = newTitle.split(\" \").join('-');\n// return slug;\n// }\n// console.log(slugify(\"Arrays for beginners\")); // \"arrays-for-beginners\"\n// console.log(slugify(\"English for developer\")); // \"english-for-developer\"\n// console.log(slugify(\"Ten secrets of JavaScript\")); // \"ten-secrets-of-javascript\"\n// console.log(slugify(\"How to become a JUNIOR developer in TWO WEEKS\")); // \"how-to-become-a-junior-developer-in-two-weeks\"\n\n\n// function makeArray (firstArray, secondArray, maxLength){\n//     const newArray = firstArray.concat(secondArray);\n//         if (newArray.length>maxLength){\n//             return newArray.slice(0, maxLength)\n//         }\n//         return newArray;\n//     }\n//     console.log(makeArray([\"Mango\", \"Poly\"], [\"Ajax\", \"Chelsea\"], 3)); // [\"Mango\", \"Poly\", \"Ajax\"]\n//     console.log(makeArray([\"Mango\", \"Poly\", \"Houston\"], [\"Ajax\", \"Chelsea\"], 4)); // [\"Mango\", \"Poly\", \"Houston\", \"Ajax\"]\n//     console.log(makeArray([\"Mango\"], [\"Ajax\", \"Chelsea\", \"Poly\", \"Houston\"], 3)); // [\"Mango\", \"Ajax\", \"Chelsea\"]\n//     console.log(makeArray([\"Earth\", \"Jupiter\"], [\"Neptune\", \"Uranus\"], 2)); // [\"Earth\", \"Jupiter\"]\n//     console.log(makeArray([\"Earth\", \"Jupiter\"], [\"Neptune\", \"Uranus\"], 4)); // [\"Earth\", \"Jupiter\", \"Neptune\", \"Uranus\"]\n//     console.log(makeArray([\"Earth\", \"Jupiter\"], [\"Neptune\", \"Uranus\", \"Venus\"], 0)); // []\n    \n\n\n// function filterArray(numbers, value){\n//     const newArray=[];\n//     for (let i = 0; i < numbers.length; i++){\n//     if(numbers[i] > value){\n//         newArray.push(numbers[i]);\n//     }\n// }\n// return newArray;\n// }\n// console.log(filterArray([1, 2, 3, 4, 5], 3)); // [4, 5]\n// console.log(filterArray([1, 2, 3, 4, 5], 4)); // [5]\n// console.log(filterArray([1, 2, 3, 4, 5], 5)); // []\n// console.log(filterArray([12, 24, 8, 41, 76], 38)); // [41, 76]\n// console.log(filterArray([12, 24, 8, 41, 76], 20)); // [24, 41, 76]\n\n\n\n// \n\n\n\n// const getUsersWithFriend=(users, friendName)=>users.filter(user=>user.friends.includes(friendName));\n// const allUsers = [\n//     {\n//       name: \"Moore Hensley\",\n//       friends: [\"Sharron Pace\"]\n//     },\n//     {\n//       name: \"Sharlene Bush\",\n//       friends: [\"Briana Decker\", \"Sharron Pace\"]\n//     },\n//     {\n//       name: \"Ross Vazquez\",\n//       friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"]\n//     },\n//     {\n//       name: \"Elma Head\",\n//       friends: [\"Goldie Gentry\", \"Aisha Tran\"]\n//     },\n//     {\n//       name: \"Carey Barr\",\n//       friends: [\"Jordan Sampson\", \"Eddie Strong\"]\n//     },\n//     {\n//       name: \"Blackburn Dotson\",\n//       friends: [\"Jacklyn Lucas\", \"Linda Chapman\"]\n//     },\n//     {\n//       name: \"Sheree Anthony\",\n//       friends: [\"Goldie Gentry\", \"Briana Decker\"]\n//     }\n//   ];\n  \n//   console.log(getUsersWithFriend(allUsers, \"Briana Decker\")); \n//   // [\n//   //   {\n//   //     name: \"Sharlene Bush\",\n//   //     friends: [\"Briana Decker\", \"Sharron Pace\"]\n//   //   },\n//   //   {\n//   //     name: \"Sheree Anthony\",\n//   //     friends: [\"Goldie Gentry\", \"Briana Decker\"]\n//   //   }\n//   // ]\n  \n//   console.log(getUsersWithFriend(allUsers, \"Goldie Gentry\"));\n//   // [\n//   //   {\n//   //     name: \"Elma Head\",\n//   //     friends: [\"Goldie Gentry\", \"Aisha Tran\"]\n//   //   },\n//   //   {\n//   //     name: \"Sheree Anthony\",\n//   //     friends: [\"Goldie Gentry\", \"Briana Decker\"]\n//   //   }\n//   // ]\n  \n//   console.log(getUsersWithFriend(allUsers, \"Adrian Cross\" )); // []\n  \n\n// const sortByDescendingFriendCount=users=>{\n//     return users.toSorted((a,b)=>b.friends.length-a.friends.length);\n// }\n// console.log(\n//     sortByDescendingFriendCount([\n//       {\n//         name: \"Moore Hensley\",\n//         friends: [\"Sharron Pace\"],\n//         gender: \"male\"\n//       },\n//       {\n//         name: \"Sharlene Bush\",\n//         friends: [\"Briana Decker\", \"Sharron Pace\"],\n//         gender: \"female\"\n//       },\n//       {\n//         name: \"Ross Vazquez\",\n//         friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n//         gender: \"male\"\n//       },\n//       {\n//         name: \"Elma Head\",\n//         friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n//         gender: \"female\"\n//       },\n//       {\n//         name: \"Carey Barr\",\n//         friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n//         gender: \"male\"\n//       },\n//       {\n//         name: \"Blackburn Dotson\",\n//         friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n//         gender: \"male\"\n//       },\n//       {\n//         name: \"Sheree Anthony\",\n//         friends: [\"Goldie Gentry\", \"Briana Decker\"],\n//         gender: \"female\"\n//       }\n//     ])\n//   );\n//   // [\n//   //   {\n//   //     name: \"Ross Vazquez\",\n//   //     friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n//   //     gender: \"male\"\n//   //   },\n//   //   {\n//   //     name: \"Sharlene Bush\",\n//   //     friends: [\"Briana Decker\", \"Sharron Pace\"],\n//   //     gender: \"female\"\n//   //   },\n//   //   {\n//   //     name: \"Elma Head\",\n//   //     friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n//   //     gender: \"female\"\n//   //   },\n//   //   {\n//   //     name: \"Carey Barr\",\n//   //     friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n//   //     gender: \"male\"\n//   //   },\n//   //   {\n//   //     name: \"Blackburn Dotson\",\n//   //     friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n//   //     gender: \"male\"\n//   //   },\n//   //   {\n//   //     name: \"Sheree Anthony\",\n//   //     friends: [\"Goldie Gentry\", \"Briana Decker\"],\n//   //     gender: \"female\"\n//   //   },\n//   //   {\n//   //     name: \"Moore Hensley\",\n//   //     friends: [\"Sharron Pace\"],\n//   //     gender: \"male\"\n//   //   }\n//   // ]\n  \n\nconst getTotalBalanceByGender=(users, gender)=>{\n    return users\n        .filter(user => user.gender === gender)\n        .reduce((total, user) => total + user.balance, 0);\n};\n\nconst clients = [\n\t{\n    name: \"Moore Hensley\",\n    gender: \"male\",\n    balance: 2811\n  },\n  {\n    name: \"Sharlene Bush\",\n    gender: \"female\",\n    balance: 3821\n  },\n  {\n    name: \"Ross Vazquez\",\n    gender: \"male\",\n    balance: 3793\n  },\n  {\n    name: \"Elma Head\",\n    gender: \"female\",\n    balance: 2278\n  },\n  {\n    name: \"Carey Barr\",\n    gender: \"male\",\n    balance: 3951\n  },\n  {\n    name: \"Blackburn Dotson\",\n    gender: \"male\",\n    balance: 1498\n  },\n  {\n    name: \"Sheree Anthony\",\n    gender: \"female\",\n    balance: 2764\n  }\n];\n\nconsole.log(getTotalBalanceByGender(clients, \"male\")); // 12053\n\nconsole.log(getTotalBalanceByGender(clients, \"female\")); // 8863\n"],"names":["getTotalBalanceByGender","users","gender","user","total","clients"],"mappings":"0uBAwSA,MAAMA,EAAwB,CAACC,EAAOC,IAC3BD,EACF,OAAOE,GAAQA,EAAK,SAAWD,CAAM,EACrC,OAAO,CAACE,EAAOD,IAASC,EAAQD,EAAK,QAAS,CAAC,EAGlDE,EAAU,CACf,CACG,KAAM,gBACN,OAAQ,OACR,QAAS,IACV,EACD,CACE,KAAM,gBACN,OAAQ,SACR,QAAS,IACV,EACD,CACE,KAAM,eACN,OAAQ,OACR,QAAS,IACV,EACD,CACE,KAAM,YACN,OAAQ,SACR,QAAS,IACV,EACD,CACE,KAAM,aACN,OAAQ,OACR,QAAS,IACV,EACD,CACE,KAAM,mBACN,OAAQ,OACR,QAAS,IACV,EACD,CACE,KAAM,iBACN,OAAQ,SACR,QAAS,IACV,CACH,EAEA,QAAQ,IAAIL,EAAwBK,EAAS,MAAM,CAAC,EAEpD,QAAQ,IAAIL,EAAwBK,EAAS,QAAQ,CAAC"}